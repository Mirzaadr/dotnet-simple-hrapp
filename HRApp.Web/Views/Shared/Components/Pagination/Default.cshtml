@model HRApp.Web.Models.ViewModels.PaginationViewModel

@{
    int currentPage = Model.CurrentPage;
    int totalPages = Model.TotalPages;
    string search = Model.SearchTerm ?? "";
    int startPage = Math.Max(2, currentPage - 2);
    int endPage = Math.Min(totalPages - 1, currentPage + 2);
}

<nav>
    <ul class="pagination">
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, search = search })">«</a>
        </li>
        <li class="page-item @(currentPage == 1 ? "active" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = 1, search = search })">1</a>
        </li>

        @if (startPage > 2)
        {
            <li class="page-item disabled"><span class="page-link">…</span></li>
        }

        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i, search = search })">@i</a>
            </li>
        }

        @if (endPage < totalPages - 1)
        {
            <li class="page-item disabled"><span class="page-link">…</span></li>
        }

        @if (totalPages > 1)
        {
            <li class="page-item @(currentPage == totalPages ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = totalPages, search = search })">@totalPages</a>
            </li>
        }

        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, search = search })">»</a>
        </li>
    </ul>
</nav>
